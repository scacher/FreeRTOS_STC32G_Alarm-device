C251 COMPILER V5.60.0,  Power_detection                                                    04/07/23  12:54:12  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Power_detection
OBJECT MODULE PLACED IN .\Objects\Power_detection.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE Sources\Task\src\Power_detection.c XSMALL FUNCTIONS(REENTRANT) OPTIMIZ
                    -E(4,SPEED) BROWSE INCDIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\ST
                    -C32G12K128;.\Sources\Driver\inc;.\Sources\Task\inc) DEBUG PRINT(.\Listings\Power_detection.lst) TABS(2) OBJECT(.\Objects
                    -\Power_detection.obj) 

stmt  level    source

    1          #include "FreeRTOS.h"
    2          #include "task.h"
    3          #include "STC32G_ADC.h"
    4          
    5          #include "Power_detection.h"
    6          #include "display.h"
    7          
    8          #define ADCKEY_CHANNEL          1                       //ADC按键的输入通道（P1.0）
    9          #define ADC_OFFSET              100  
   10          
   11          uint8_t flag;
   12          uint16_t adcResult;
   13          static uint8_t VolState;                              //ADC按键状态
   14          static uint8_t VolState1;
   15          static uint8_t VolState2;
   16          static uint8_t VolState3;
   17          static uint8_t VolState4;
   18          static uint8_t VolState5;
   19          
   20          uint16_t prvAdcPower_detection( void );
   21          static void prvVolInit( void );
   22          
   23          //typedef struct Result
   24          //{
   25          //  int flag;
   26          //  int adc1Result;
   27          //}
   28          //Result,*PResult;
   29          
   30          portTASK_FUNCTION( vPowerTask, pvParameters )
   31          {
   32   1          UNUSED( pvParameters );
   33   1          prvVolInit();
   34   1          while(1)
   35   1          {
   36   2              adcResult=prvAdcPower_detection();
   37   2      //        if(!flag)
   38   2      //        {
   39   2                pucLEDBuffer[4] = adcResult/ 1000;    
   40   2                pucLEDBuffer[5] = adcResult% 1000/100;
   41   2                pucLEDBuffer[6] = adcResult% 1000%100/10;
   42   2                pucLEDBuffer[7] = adcResult% 1000%100%10;
   43   2      //        }
   44   2      //        else
   45   2      //        {
   46   2      //          pucLEDBuffer[4] = 1;    //显示电压值
   47   2      //          pucLEDBuffer[5] = 1;
   48   2      //          pucLEDBuffer[6] = 1;
   49   2      //          pucLEDBuffer[7] = 1;
   50   2      //        }
   51   2              vTaskDelay(200);
   52   2          }
   53   1          
   54   1          vTaskDelete(NULL);
   55   1      } 
   56          
C251 COMPILER V5.60.0,  Power_detection                                                    04/07/23  12:54:12  PAGE 2   

   57          static void prvVolInit( void )
   58          {
   59   1      //    P1M1 |= 0x01;                                       //设置 P1.0 为 ADC 输入口
   60   1      //    P1M0 &= ~0x01;
   61   1      
   62   1          VolState  = 0;
   63   1          VolState1 = 0;
   64   1          VolState2 = 0;
   65   1          VolState3 = 0; 
   66   1          VolState4 = 0;
   67   1          VolState5 = 0;  
   68   1          flag=0;
   69   1      }
   70          
   71          uint16_t prvAdcPower_detection( void )
   72          {
   73   1      
   74   1          uint16_t usResult;
   75   1      //    uint8_t flag;
   76   1          VolState5 = VolState4;
   77   1          VolState4 = VolState3;
   78   1          VolState3 = VolState2;
   79   1          VolState2 = VolState1;
   80   1          usResult = Get_ADCResult(ADCKEY_CHANNEL);
   81   1          if((usResult>=(4050-ADC_OFFSET))&&
   82   1              (usResult<=(4050+ADC_OFFSET)))
   83   1            VolState1=1;
   84   1          else
   85   1            VolState1=0;
   86   1          if ( (VolState5 == VolState4)&&
   87   1               (VolState4 == VolState3)&&
   88   1               (VolState3 == VolState2)&&
   89   1               (VolState2 == VolState1)&&
   90   1                (VolState5 > 0) &&
   91   1                (VolState4 > 0) &&
   92   1                (VolState3 > 0) &&
   93   1                (VolState2 > 0) &&
   94   1                (VolState1 > 0))
   95   1            flag=1;
   96   1          else
   97   1            flag=0;
   98   1          
   99   1          return usResult;
  100   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       256     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         9     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
