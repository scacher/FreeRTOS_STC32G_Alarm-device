C251 COMPILER V5.60.0,  DS18B20                                                            04/07/23  12:54:12  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE Sources\Task\src\DS18B20.c XSMALL FUNCTIONS(REENTRANT) OPTIMIZE(4,SPEE
                    -D) BROWSE INCDIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC32G12K1
                    -28;.\Sources\Driver\inc;.\Sources\Task\inc) DEBUG PRINT(.\Listings\DS18B20.lst) TABS(2) OBJECT(.\Objects\DS18B20.obj) 

stmt  level    source

    1          #include "stc32g.h"
    2          #include "FreeRTOS.h"
    3          #include "task.h"
    4          #include "DS18B20.h"
    5          #include "display.h"
    6          #include "STC32G_GPIO.h"
    7          
    8          typedef unsigned char u8;
    9          typedef unsigned short u16;
   10          typedef unsigned long u32;
   11          
   12          #define DQ  P45
   13          #define   usrNOP()    _nop_();_nop_();_nop_();_nop_();_nop_();_nop_()
   14          
   15          u8 MinusFlag;
   16          short temp;
   17          u8 flag2;
   18          /*************  本地函数声明    **************/
   19          void DS18B20_Reset();
   20          void DS18B20_WriteByte(u8 dat);
   21          u8 DS18B20_ReadByte();
   22          
   23          void delay_us(u8 us);
   24          u16 ReadTemperature();
   25          void DisplayTemperature(u16 temp);
   26          
   27          portTASK_FUNCTION( vDS18B20Task, pvParameters)
   28          {
   29   1        short temp1;
   30   1        UNUSED( pvParameters );
   31   1      //    // ds1820 start convert
   32   1      //    WTST = 0;  //设置程序指令延时参数，赋值为0可将CPU执行指令的速度设置为最快
   33   1      //    EAXFR = 1; //扩展寄存器(XFR)访问使能
   34   1      //    CKCON = 0; //提高访问XRAM速度
   35   1          while(1)
   36   1          {
   37   2            temp1 = ReadTemperature();
   38   2            if(temp1)
   39   2              temp=temp1;
   40   2            if(temp>=300)
   41   2              flag2=1;
   42   2            else
   43   2              flag2=0;
   44   2            DisplayTemperature(temp);
   45   2            vTaskDelay(200);
   46   2          }
   47   1          vTaskDelete(NULL);
   48   1      }
   49          
   50          u16 ReadTemperature()
   51          {
   52   1          u16 TempH, TempL, Temperature;
   53   1        
   54   1          DS18B20_Reset();                //设备复位
   55   1          DS18B20_WriteByte(0xCC);        //跳过ROM命令
   56   1          DS18B20_WriteByte(0x44);        //开始转换命令
   57   1          while (!DQ);                    //等待转换完成
C251 COMPILER V5.60.0,  DS18B20                                                            04/07/23  12:54:12  PAGE 2   

   58   1      
   59   1          DS18B20_Reset();                //设备复位
   60   1          DS18B20_WriteByte(0xCC);        //跳过ROM命令
   61   1          DS18B20_WriteByte(0xBE);        //读暂存存储器命令
   62   1          TempL = DS18B20_ReadByte();     //读温度低字节
   63   1          TempH = DS18B20_ReadByte();     //读温度高字节
   64   1        
   65   1          if(TempH & 0xf8)    //判断是否位负数
   66   1          {
   67   2              MinusFlag = 1;  //设置负数标志
   68   2              Temperature = (TempH<<8) | TempL;
   69   2              Temperature = ~Temperature + 1;
   70   2              Temperature *= 0.625;       //0.0625 * 10，保留1位小数点
   71   2          }
   72   1          else
   73   1          {
   74   2              MinusFlag = 0;  //清除负数标志
   75   2              Temperature = (((TempH<<8) | TempL) * 0.625); //0.0625 * 10，保留1位小数点
   76   2          }
   77   1      
   78   1          return Temperature;
   79   1      }
   80          
   81          void DisplayTemperature(u16 temp)
   82          {
   83   1      //    if(MinusFlag)
   84   1      //    {
   85   1      //        if(temp > 999)
   86   1      //        {
   87   1      //            pucLEDBuffer[3] = DIS_;
   88   1      //            pucLEDBuffer[4] = temp / 1000;
   89   1      //        }
   90   1      //        else
   91   1      //        {
   92   1      //            pucLEDBuffer[3] = DIS_BLACK;
   93   1      //            pucLEDBuffer[4] = DIS_;
   94   1      //        }
   95   1      //    }
   96   1      //    else
   97   1      //    {
   98   1      //        pucLEDBuffer[3] = DIS_BLACK;
   99   1      //        if(temp > 999)
  100   1      //        {
  101   1      //            pucLEDBuffer[4] = temp / 1000;
  102   1      //        }
  103   1      //        else
  104   1      //        {
  105   1      //            pucLEDBuffer[4] = DIS_BLACK;
  106   1      //        }
  107   1      //    }
  108   1          pucLEDBuffer[1] = (temp % 1000) / 100;
  109   1          pucLEDBuffer[2] = ((temp % 100) / 10) + DIS_DOT;
  110   1          pucLEDBuffer[3] = temp % 10;
  111   1      }
  112          
  113          void delay_us(u8 us)
  114          {
  115   1          do{
  116   2              usrNOP();
  117   2              usrNOP();
  118   2          }while(--us);
  119   1      }
  120          
  121          void DS18B20_Reset()
  122          {
  123   1          CY = 1;
C251 COMPILER V5.60.0,  DS18B20                                                            04/07/23  12:54:12  PAGE 3   

  124   1          while (CY)
  125   1          {
  126   2              DQ = 0;                     //送出低电平复位信号
  127   2              delay_us(240);              //延时至少480us
  128   2              delay_us(240);
  129   2              DQ = 1;                     //释放数据线
  130   2              delay_us(60);               //等待60us
  131   2              CY = DQ;                    //检测存在脉冲
  132   2              delay_us(240);              //等待设备释放数据线
  133   2              delay_us(180);
  134   2          }
  135   1      }
  136          
  137          u8 DS18B20_ReadByte()
  138          {
  139   1          u8 i;
  140   1          u8 dat = 0;
  141   1      
  142   1          for (i=0; i<8; i++)             //8位计数器
  143   1          {
  144   2              dat >>= 1;
  145   2              DQ = 0;                     //开始时间片
  146   2              delay_us(1);                //延时等待
  147   2              DQ = 1;                     //准备接收
  148   2              delay_us(1);                //接收延时
  149   2              if (DQ) dat |= 0x80;        //读取数据
  150   2              delay_us(60);               //等待时间片结束
  151   2          }
  152   1      
  153   1          return dat;
  154   1      }
  155          
  156          void DS18B20_WriteByte(u8 dat)
  157          {
  158   1          char i;
  159   1      
  160   1          for (i=0; i<8; i++)             //8位计数器
  161   1          {
  162   2              DQ = 0;                     //开始时间片
  163   2              delay_us(1);                //延时等待
  164   2              dat >>= 1;                  //送出数据
  165   2              DQ = CY;
  166   2              delay_us(60);               //等待时间片结束
  167   2              DQ = 1;                     //恢复数据线
  168   2              delay_us(1);                //恢复延时
  169   2          }
  170   1      }
  171          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       378     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         4     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
C251 COMPILER V5.60.0,  DS18B20                                                            04/07/23  12:54:12  PAGE 4   

  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
